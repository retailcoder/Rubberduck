<UserControl x:Class="Rubberduck.UI.Settings.GeneralSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:settings="clr-namespace:Rubberduck.UI.Settings"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Settings.Converters"
             xmlns:hiddenVisibility="clr-namespace:Rubberduck.UI.Converters"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type settings:GeneralSettingsViewModel}, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/DefaultStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:DelimiterValueToTextConverter x:Key="DelimiterValueToText" />
            <converters:DelimiterToTextConverter x:Key="DelimiterToText" />
            <converters:HotkeyDisplayConverter x:Key="HotkeyDisplay" />
            <hiddenVisibility:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
            
            <ObjectDataProvider x:Key="Delimiters"
                            MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type Type="settings:DelimiterOptions"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer x:Name="ScrollViewer">
            <Grid>
                <StackPanel Grid.Row="0" Margin="5,5,5,0">
                    <Label Background="{StaticResource HeaderBackgroundDarkBrush}"
                       HorizontalContentAlignment="Stretch"
                       Margin="0,0,0,3">
                        <Label.Style>
                            <Style>
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5"/>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Label.Style>
                        <DockPanel Background="{StaticResource HeaderBackgroundDarkBrush}" FlowDirection="LeftToRight">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                                <Label Foreground="{StaticResource CaptionLightBrush}"
                                   FontWeight="SemiBold" 
                                   Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=PageHeader_GeneralSettings}">
                                </Label>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MaxWidth="75"/>
                                        <ColumnDefinition MaxWidth="75"/>
                                    </Grid.ColumnDefinitions>
                                    <controls:LinkButton Grid.Column="1" Margin="2"
                                                         Command="{Binding ImportButtonCommand}"
                                                         Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=ImportPageSettingsButton}"/>
                                    <controls:LinkButton Grid.Column="2" Margin="2"
                                                         Command="{Binding ExportButtonCommand}"
                                                         Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=ExportPageSettingsButton}"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right"/>
                        </DockPanel>
                    </Label>
                    <Label Target="{Binding ElementName=DisplayLanguage}"
                           Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=LanguageLabel}" FontWeight="SemiBold" />
                    <ComboBox x:Name="DisplayLanguage"
                              Width="210"
                              HorizontalAlignment="Left"
                              Margin="5"
                              SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                              ItemsSource="{Binding Languages, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="Name" />

                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=ShowSplash}"
                              IsChecked="{Binding ShowSplashAtStartup}" />

                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=CheckVersion}"
                              IsChecked="{Binding CheckVersionAtStartup}"
                              x:Name="IsVersionCheckEnabled"/>
                    <CheckBox Margin="15,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=IncludePreRelease}"
                              IsChecked="{Binding IncludePreRelease}"
                              IsEnabled="{Binding IsChecked, ElementName=IsVersionCheckEnabled}"/>
                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=CompileBeforeParse}"
                              IsChecked="{Binding CompileBeforeParse}" />
                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=SetDpiUnaware}"
                              IsEnabled="{Binding SetDpiUnawareEnabled}"  
                              IsChecked="{Binding SetDpiUnaware}" />
                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=EnableDragAndDrop}"
                              IsChecked="{Binding EnableFolderDragAndDrop}" />
                    <StackPanel Orientation="Horizontal"/>

                    <Label Target="{Binding ElementName=minimumLogLevel}"
                           Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=MinimumLogLevelLabel}" FontWeight="SemiBold" Margin="1,0,-1,0" />
                    <ComboBox x:Name="minimumLogLevel"
                                  Width="210"
                                  HorizontalAlignment="Left"
                                  Margin="5"
                                  SelectedItem="{Binding SelectedLogLevel, Mode=TwoWay}"
                                  ItemsSource="{Binding LogLevels, UpdateSourceTrigger=PropertyChanged}"
                                  DisplayMemberPath="Name"/>
                    <Button 
                            Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=ShowLogFolder}"
                            Padding="5"
                            Command="{Binding ShowLogFolderCommand}"/>


                    <DockPanel>
                        <Label DockPanel.Dock="Left" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeysLabel}" FontWeight="SemiBold" />
                        <Label DockPanel.Dock="Right" Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyRestrictionLabel}"
                               Visibility="{Binding ShouldDisplayHotkeyModificationLabel, Converter={StaticResource BoolToVisibility}}"
                               Foreground="{StaticResource CaptionErrorBrush}"
                               FontWeight="Bold"/>
                    </DockPanel>

                    <DataGrid ItemsSource="{Binding Hotkeys}"
                              HorizontalAlignment="Stretch"
                              AutoGenerateColumns="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="True"
                              IsReadOnly="False"
                              SelectionMode="Single"
                              CanUserAddRows="False"
                              HorizontalGridLinesBrush="Transparent"
                              VerticalGridLinesBrush="Transparent"
                              HeadersVisibility="Column"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Hidden"
                              ItemContainerStyle="{StaticResource PrettifyRow}"
                              ColumnHeaderHeight="22"
                              BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyEnabled}"
                        Width="Auto"
                        Binding="{Binding IsEnabled}" />
                            <DataGridTextColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyDescription}"
                        Binding="{Binding Prompt}"
                        Width="*"
                        IsReadOnly="True" />
                            <DataGridTemplateColumn
                                Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Visibility="{Binding IsValid, Converter={StaticResource BoolToHiddenVisibility}}"
                                               HorizontalContentAlignment="Center">
                                            <Image Source="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=exclamation}"
                                                   ToolTip="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyRestrictionToolTip}"/>
                                        </Label>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyShift}"
                        Width="Auto"
                        Binding="{Binding HasShiftModifier}" />
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyAlt}"
                        Width="Auto"
                        Binding="{Binding HasAltModifier}" />
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyCtrl}"
                        Width="Auto"
                        Binding="{Binding HasCtrlModifier}" />
                            <DataGridTemplateColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyKey1}"
                        Width="Auto"
                        SortMemberPath="KeyDisplaySymbol">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Key1, Converter={StaticResource HotkeyDisplay}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn
                        Header="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=HotkeyKey2}"
                        Width="Auto"
                        SortMemberPath="KeyDisplaySymbol"
                        Visibility="Collapsed">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Key2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=ExperimentalFeatures}" FontWeight="SemiBold" />
                    <Label Margin="5,0,0,5" FontWeight="Bold"
                           Foreground="{x:Static SystemColors.InfoTextBrush}" 
                           Background="{x:Static SystemColors.InfoBrush}">
                        <Label.Content>
                            <AccessText TextWrapping="Wrap" Text="{Resx ResxName=Rubberduck.UI.Settings.GeneralSettingsUI, Key=ExperimentalFeaturesWarning}"/>
                        </Label.Content>
                    </Label>
                    <ListView ItemsSource="{Binding ExperimentalFeatures}"
                          HorizontalAlignment="Stretch"
                          BorderThickness="0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding DisplayValue}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
