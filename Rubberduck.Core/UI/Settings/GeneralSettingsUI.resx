<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HotkeyRestrictionToolTip" xml:space="preserve">
    <value>This hotkey configuration may cause undesirable side effects.</value>
  </data>
  <data name="WarnLogLevel" xml:space="preserve">
    <value>Warn</value>
  </data>
  <data name="TraceLogLevel" xml:space="preserve">
    <value>Trace</value>
  </data>
  <data name="SlashDelimiter" xml:space="preserve">
    <value>Slash (/)</value>
  </data>
  <data name="ShowSplash" xml:space="preserve">
    <value>Show _splash screen at startup</value>
  </data>
  <data name="ShowLogFolder" xml:space="preserve">
    <value>Show Log Folder</value>
  </data>
  <data name="SetDpiUnaware" xml:space="preserve">
    <value>Correction for high-_resolution display scalings</value>
  </data>
  <data name="PeriodDelimiter" xml:space="preserve">
    <value>Period (.)</value>
  </data>
  <data name="OffLogLevel" xml:space="preserve">
    <value>No Logging</value>
  </data>
  <data name="ModifierWarning" xml:space="preserve">
    <value>Modifier Warning</value>
  </data>
  <data name="MinimumLogLevelLabel" xml:space="preserve">
    <value>Minimum _Log Level:</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Display l_anguage:</value>
  </data>
  <data name="InfoLogLevel" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="IncludePreRelease" xml:space="preserve">
    <value>Tell me if a newer _pre-release build is available.</value>
  </data>
  <data name="HotkeysLabel" xml:space="preserve">
    <value>Hotkeys:</value>
  </data>
  <data name="HotkeyShift" xml:space="preserve">
    <value>Shift</value>
  </data>
  <data name="HotkeyRestrictionLabel" xml:space="preserve">
    <value>Hotkeys should include either Alt and/or Ctrl.</value>
  </data>
  <data name="HotkeyKey2" xml:space="preserve">
    <value>Key2</value>
  </data>
  <data name="HotkeyKey1" xml:space="preserve">
    <value>Key1</value>
  </data>
  <data name="HotkeyEnabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="HotkeyDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="HotkeyCtrl" xml:space="preserve">
    <value>Ctrl</value>
  </data>
  <data name="HotkeyAlt" xml:space="preserve">
    <value>Alt</value>
  </data>
  <data name="FolderDelimiterLabel" xml:space="preserve">
    <value>Folder Delimiter:</value>
  </data>
  <data name="FatalLogLevel" xml:space="preserve">
    <value>Fatal</value>
  </data>
  <data name="ExperimentalFeaturesWarning" xml:space="preserve">
    <value>Only enable these if you know what you're doing. Enabling and/or using features from this section may result in things breaking unexpectedly and irrevocable data loss.</value>
  </data>
  <data name="ExperimentalFeatures" xml:space="preserve">
    <value>Experimental Features (Requires a restart to take effect):</value>
  </data>
  <data name="ErrorLogLevel" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="EnableDragAndDrop" xml:space="preserve">
    <value>Enable _drag and drop in Code Explorer</value>
  </data>
  <data name="DebugLogLevel" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="CompileBeforeParse_WarnCompileOnDemandEnabled_Caption" xml:space="preserve">
    <value>Compile On Demand currently enabled</value>
  </data>
  <data name="CompileBeforeParse_WarnCompileOnDemandEnabled" xml:space="preserve">
    <value>The VBE setting "Compile On Demand" is currently enabled. It is strongly recommended that you disable the setting via the VBE Options dialog under General tab in order to use the Compile Before Parse feature. Do you want to disable it now?

NOTE: Restart is required for the setting to take effect.</value>
  </data>
  <data name="CompileBeforeParse" xml:space="preserve">
    <value>_Compile code before parsing</value>
  </data>
  <data name="CheckVersion" xml:space="preserve">
    <value>Check if a newer _version is available at startup.</value>
  </data>
</root>